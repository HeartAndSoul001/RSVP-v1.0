{"version":3,"sources":["js/jquery.terminal.js"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","slice","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","window","factory","undefined","root","define","amd","module","exports","jQuery","wcwidth","require","$","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","Error","item","bind","clone","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","value","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","self","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","firstChild","setSelectionRange","select","is","resizer","callback","trigger","unbind","$this","iframe","resize_handler","data","has","removeData","ResizeObserver","observer","unobserve","find","contentWindow","off","first","observe","on","addClass","appendTo","isFullyInViewport","container","box","getBoundingClientRect","viewport","top","bottom","height","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","message","exception_message","setTimeout","scrollbar_event","node","left","offset","outerWidth","clientX","fileName","Cycle","rotate","skip","init","defined","filter","append","front","restart","Boolean","forEach","Stack","size","pop","concat","History","name","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","current","next","old","previous","clear","purge","enable","disable","toggle","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","prompt","history","onPositionChange","noop","onCommandChange","inputStyle","onPaste","clickTimeout","holdTimeout","holdRepeatTimeout","repeatTimeoutKeys","tabindex","tabs","options","settings","maybe_data","id","clip","autocapitalize","spellcheck","is_mobile","val","width","num_chars","char_width","last_rendered_prompt","prompt_last_line","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","animation","restart_animation","paste_count","get_char_pos","closest","parent","prevAll","prevUntil","nextUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","reversed_keycodes","keys","which","keymap","default_keymap","ALT+D","delete_word","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","ARROWUP","prev_history","CTRL+P","ARROWDOWN","next_history","CTRL+N","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","len","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","F12","return_true","END","CTRL+E","HOME","home","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_word_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","clipboard","substring","m","isenabled","paste","fix_textarea","then","first_up_history","mobile_focus","fix_cursor","animation_supported","style","getComputedStyle","animationName","getPropertyValue","_class","className","position_only","is_android","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","terminal","escape_regex","get_char_width","$prompt","html","get_num_chars","Math","floor","get_splitted_command_line","string","split_equal","skip_empty","line","strip","escape_brackets","first_len","strlen","splitted","formatting","skip_formatted_position","escape_formatting","unixFormattingEscapeBrackets","formatted","apply_formatters","max","normalize","stack","before","encoded","encode","wrap","is_formatting","start","prev","after","cursor_line","draw_cursor_line","ch_unit_bug","before_str","c_before","cond","noselect","cursor_len","setProperty","div","lines_after","lines","last_ins","insertAfter","lines_before","css","original_string","from_last","last_len","new_pos","line_index","current_len","msg","strings","redrawError","in_line","is_css_variables_supported","find_position","cmp","search_pos","opts","guess","codepoint_len","binary_search","chars","split_characters","crlf","encoded_last_line","last_line","fire_change_command","clean","option","delete","stay","removed","silent","new_keymap","original","bare_command","destroy","doc","keypress_event","keydown_event","input_event","user_prompt","relative","refresh","display_position","command_len","new_formatted_pos","visible","show","resize","invoke_key","shortcut","ctrl","shift","alt","meta","Event","documentElement","keyCode","new_mask","prevent_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold","hold_pause","skip_insert","is_backspace","is_single","clear_reverse_search_key","fake","exception","keydown","clear_hold","keypress","is_key_native","normalized","inArray","event","type","chr","keycode","charCodeAt","abs","was_down","count","$target","down","button","originalEvent","get_selected_text","KeyboardEvent","combine_chr_re","astral_symbols_re","emoji_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","color_hex_re","url_re","url_nf_re","email_re","command_re","extended_command_re","format_begin_re","format_start_re","format_end_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","domPrefixes","elm","createElement","is_ch_unit_supported","agent","CSS","supports","proto","getOwnPropertyDescriptor","check","substr","vendor","opera","base","ch","space","bare_text","safe","get_next_character","match_emoji","match_combo","normalize_position","acc","char_width_prop","extra_css","bare","wide_characters","specs","arr","spec","sum","compare_fn","mid","$div","select_all","execCommand","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","term","onTerminalChange","setBaseAndExtent","setStart","childNodes","removeAllRanges","addRange","process_command","args","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","have_formatting","format_split","tracking_replace","rex","replacement","new_string","rep_string","new_position","last_index","c0","iterate_formatting","is_space","entity_re","match_entity","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","in_text","space_count","prev_space","braket","char","start_index","end_index","start_formatting","end_formatting","prev_index","_","semicolons","keep_words","prev_format","first_index","line_length","last_char","last_bracket","last_iteraction","can_break","stripped","text_len","new_index","closed_formatting","matched","amp","sp","nested_formatting","test_lengths","formatter","__no_warn__","warn","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","position_partial","partial","Exception","linksNoReferrer","linksNoFollow","anyLinks","background","data_text","style_str","text_decoration","extra","rel","unshift","unescape_brackets","columns","cols","no_formatting","lengths","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","extended_command","invokeMethods","change_hash","obj","eval","done","iterator","Symbol","replacer","search","new_formatter","Terminal_Exception","hidden","warnings","ids","jrpc","url","method","params","success","deferred","Deferred","isPlainObject","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","reject","contentType","dataType","async","promise","terminal_ready","get_char_size","rect","visiblity","temp","char_size","get_num_rows","all","same","same_case","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","raw","exceptionHandler","pauseEvents","softPause","cancelableAjax","processArguments","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","outputLimit","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","completion","onInit","onClear","onBlur","onFocus","onExit","onPush","onPop","onAfterRedraw","onEchoCommand","onFlush","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveCall","notAString","invalidStrings","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","display_object","echo","print_line","url_spec","pause","file","code","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","names","found","make_interpreter","user_intrp","finalize","rpc_count","fn_interpreter","recur","interpreters","new_obj","ignoreSystemDescribe","make_json_rpc_login","user","passwd","output_buffer","NEW_LINE","buffer_line","format_options","words","keepWords","process_line","line_settings","is_fn","parseObject","parts","prev_cmd","update","scroll","command_line","detached_output","empty","detach","lines_to_show","rows","flush","fire_event","limit_lines","$lines","for_remove","parents","$self","show_greetings","greetings","signature","echo_command","get_command","have_scrollbar","innerWidth","clientWidth","fill","restore_state","command_idx","import_view","export_view","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","after_exec","saved_change_hash","invoke","when","paused","ghost","level","logout","in_login","get_token","set_token","global_logout","onBeforeLogout","clear_loging_storage","onAfterLogout","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","fun","init_queue","onStart","move_cursor_visible","scrollTop","hashchange","decodeURIComponent","was_paused","onPause","user_key_down","get_position","set_command","CTRL+L","orignal","caseSensitive","complete","word","escape","before_cursor","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","tab_count","r","readyState","abort","key_press","ready","queue","selector","terminal_id","num_rows","logins","command_queue","when_ready","cmd_ready","old_width","old_height","delayed_commands","defunct","frozen","autologin","old_enabled","visibility_observer","mutation_observer","user_export","get_prompt","view","set_prompt","ignore_hash","state","d","infinite","login_callback","set_mask","pass","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","numChars","numRows","history_state","run","setImmediate","clear_history_state","x","animate","freeze","lenghts","is_bottom","get_output","new_num_chars","new_num_rows","wrapper","replaceWith","e1","e2","remove_line","locals","lineNumber","trace","amount","round","prop","local","local_name","intrp","read","cancel","defer","infiniteLogin","push_settings","object_or_name","prefix","font_resizer","blur_terminal","focus_terminal","disconnect","scrollHeight","scroll_height","scroll_top","outerHeight","base_interpreter","is_type","echo_image","image","data_uri","blob","URL","webkitURL","createObjectURL","ignoreEvents","Blob","clipboardData","items","getAsFile","getAsString","getData","itrp","onResize","mousewheel","elementFromPoint","clientY","$win","addEventListener","click","ignore_elements","mousedown","mouseup","timeout","dblclick","pageX","pageY","props","href","preventDefault","calculate_char_size","create_resizers","observe_visibility","was_enabled","visibility_checker","IntersectionObserver","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":"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","sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version 2.1.0\n *\n * This file is part of jQuery Terminal. http://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2019 Jakub T. Jankiewicz <http://jcubic.pl/me>\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * emoji regex v7.0.1 by Mathias Bynens\n * MIT license\n *\n * Date: Sun, 20 Jan 2019 10:58:06 +0000\n */\n\n/* TODO:\n *\n * Debug interpreters names in LocalStorage\n *\n * TEST: login + promises/exec\n *       json-rpc/object + promises\n *\n * NOTE: json-rpc don't need promises and delegate resume/pause because only\n *       exec can call it and exec call interpreter that work with resume/pause\n */\n/* global location, jQuery, setTimeout, window, global, localStorage, sprintf,\n         setImmediate, IntersectionObserver, MutationObserver, ResizeObserver,\n         module, require, define, setInterval, clearInterval, Blob */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.slice(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.slice(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.slice(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : window);\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root = typeof window !== 'undefined' ? window : global;\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (window !== undefined) {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        factory(root.jQuery, root.wcwidth);\n    }\n})(function($, wcwidth, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n\n    /* eslint-disable */\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.slice(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.slice(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = window.setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    window.clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        window.clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    target.focus();\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                target.focus();\n                window.getSelection().collapse(target.firstChild, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = function(callback) {\n        var trigger = arguments.length === 0;\n        var unbind = arguments[0] === \"unbind\";\n        if (!trigger && !unbind && !is_function(callback)) {\n            throw new Error('Invalid argument, it need to a function or string ' +\n                            '\"unbind\" or no arguments.');\n        }\n        if (unbind) {\n            callback = is_function(arguments[1]) ? arguments[1] : null;\n        }\n        return this.each(function() {\n            var $this = $(this);\n            var iframe;\n            var callbacks;\n            function resize_handler() {\n                callbacks.fire();\n            }\n            if (trigger || unbind) {\n                callbacks = $this.data('callbacks');\n                if (trigger) {\n                    callbacks && callbacks.fire();\n                } else {\n                    if (callback && callbacks) {\n                        callbacks.remove(callback);\n                        if (!callbacks.has()) {\n                            callbacks = null;\n                        }\n                    } else {\n                        callbacks = null;\n                    }\n                    if (!callbacks) {\n                        $this.removeData('callbacks');\n                        if (window.ResizeObserver) {\n                            var observer = $this.data('observer');\n                            if (observer) {\n                                observer.unobserve(this);\n                                $this.removeData('observer');\n                            }\n                        } else {\n                            iframe = $this.find('> iframe');\n                            if (iframe.length) {\n                                // just in case of memory leaks in IE\n                                $(iframe[0].contentWindow).off('resize').remove();\n                                iframe.remove();\n                            } else if ($this.is('body')) {\n                                $(window).off('resize.resizer');\n                            }\n                        }\n                    }\n                }\n            } else if ($this.data('callbacks')) {\n                $(this).data('callbacks').add(callback);\n            } else {\n                callbacks = $.Callbacks();\n                callbacks.add(callback);\n                $this.data('callbacks', callbacks);\n                var resizer;\n                var first = true;\n                if (window.ResizeObserver) {\n                    resizer = new ResizeObserver(function() {\n                        if (!first) {\n                            resize_handler();\n                        }\n                        first = false;\n                    });\n                    resizer.observe(this);\n                    $this.data('observer', resizer);\n                } else if ($this.is('body')) {\n                    $(window).on('resize.resizer', resize_handler);\n                } else {\n                    iframe = $('<iframe/>').addClass('resizer').appendTo(this)[0];\n\n                    $(iframe.contentWindow).on('resize', resize_handler);\n                }\n            }\n        });\n    };\n    // -----------------------------------------------------------------------\n    // :: based on https://github.com/zeusdeux/isInViewport\n    // :: work only vertically and on dom elements\n    // -----------------------------------------------------------------------\n    $.fn.isFullyInViewport = function(container) {\n        var box = this[0].getBoundingClientRect();\n        var viewport = container[0].getBoundingClientRect();\n        var top = box.top - viewport.top;\n        var bottom = box.bottom - viewport.top;\n        var height = container.height();\n        return bottom > 0 && top <= height;\n    };\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            setTimeout(function() {\n                throw e;\n            }, 0);\n            //alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node) {\n        var left = node.offset().left;\n        return node.outerWidth() <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip, init) {\n                if (init === undefined) {\n                    init = pos;\n                } else if (init === pos) {\n                    return;\n                }\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true, init);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = init instanceof Array ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (new_data instanceof Array) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            inputStyle: 'textarea',\n            onPaste: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n            tabindex: 1,\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        self.append('<span class=\"prompt\"></span>');\n        self.append('<div class=\"cursor-line\">' +\n                    '<span></span>' +\n                    '<span class=\"cursor\"><span><span>&nbsp;</span></span></span>' +\n                    '<span></span>' +\n                    '</div>');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(self.find('.cursor-line'));\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip = $('<textarea>').attr({\n            autocapitalize: 'off',\n            spellcheck: 'false',\n            tabindex: settings.tabindex\n        }).addClass('clipboard').appendTo(self);\n        if (!is_mobile) {\n            clip.val(' ');\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by resize\n        var char_width;\n        var last_rendered_prompt;\n        var prompt_last_line;\n        var prompt_len;\n        var prompt_node = self.find('.prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.nextUntil('textarea').length;\n                return node.find('span[data-text]').length +\n                    node.prevUntil('.prompt').find('span[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ARROWUP',\n            'DOWN': 'ARROWDOWN',\n            'LEFT': 'ARROWLEFT',\n            'RIGHT': 'ARROWRIGHT',\n            'DEL': 'DELETE',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function get_key(e) {\n            if (e.key) {\n                var key = e.key.toUpperCase();\n                if (key_mapping[key]) {\n                    key = key_mapping[key];\n                }\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        // -----------------------------------------------------------------\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        var i;\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (keycodes[which] instanceof Array) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n        // -----------------------------------------------------------------\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_word(true),\n            'HOLD+DELETE': delete_word(false),\n            'HOLD+SHIFT+DELETE': delete_word(false),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    ((is_function(settings.historyFilter) &&\n                      settings.historyFilter(command)) ||\n                     (settings.historyFilter instanceof RegExp &&\n                      command.match(settings.historyFilter)) ||\n                     !settings.historyFilter)) {\n                    history.append(command);\n                }\n                var tmp = command;\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                self.set('');\n                if (settings.commands) {\n                    settings.commands.call(self, tmp);\n                }\n                if (is_function(prompt)) {\n                    draw_prompt();\n                }\n                clip.val('');\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'ARROWUP': prev_history,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': next_history,\n            'CTRL+N': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': left,\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': right,\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(text(command).length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end,\n            'CTRL+E': end,\n            'HOME': home,\n            'CTRL+A': home,\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_word_backward(true),\n            'HOLD+BACKSPACE': delete_word_backward(false),\n            'HOLD+SHIFT+BACKSPACE': delete_word_backward(false),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': return_true,\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                var len = text(command).length;\n                if (len > position) {\n                    kill_text = self['delete'](len - position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_word(clipboard) {\n            return function delete_word() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (clipboard) {\n                        text_to_clipboard(self, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_word_backward(clipboard) {\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]+ *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (clipboard) {\n                            text_to_clipboard(self, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.is(':focus')) {\n                clip.trigger('focus', [true]);\n            }\n            clip.one('input', paste);\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            function set() {\n                clip.val(command);\n                fix_textarea();\n            }\n            function insert(text) {\n                self.insert(text);\n                set();\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    var value = clip.val();\n                    if (is_function(settings.onPaste)) {\n                        var ret = settings.onPaste.call(self, {\n                            target: self,\n                            text: value\n                        });\n                        if (ret !== undefined) {\n                            if (ret && is_function(ret.then)) {\n                                ret.then(insert);\n                            } else if (typeof ret === 'string') {\n                                insert(ret);\n                            } else if (ret === false) {\n                                set();\n                            }\n                            return;\n                        }\n                    }\n                    insert(value);\n                });\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            self.set(history.end() ? last_command : history.next());\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n                redraw();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < text(command).length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home() {\n            self.position(0);\n        }\n        // -------------------------------------------------------------------------------\n        function end() {\n            self.position(text(command).length);\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var focus = clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!clip.is(':focus') && enabled) {\n                        clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && (is_mobile || !enabled)) {\n                clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        // -------------------------------------------------------------------------------\n        function fix_cursor() {\n            if (animation_supported) {\n                var style = window.getComputedStyle(cursor[0]);\n                var animationName = style.getPropertyValue('--animation');\n                animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n                var _class = self.attr('class');\n                if (_class.match(/-animation/)) {\n                    _class = _class.replace(/[a-z]+-animation/g, '');\n                }\n                if (animationName && !animationName.match(/blink/)) {\n                    var className = animationName.replace(/terminal-/, '') + '-animation';\n                    if (!_class.match(className)) {\n                        _class += ' ' + className;\n                    }\n                }\n                if (_class !== self.attr('class')) {\n                    self.attr('class', _class);\n                }\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        // -------------------------------------------------------------------------------\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (!is_mobile && clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            // we check first to improve performance\n                            if (!is_mobile && clip.caret() !== position + 1) {\n                                clip.caret(position + 1);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        // -------------------------------------------------------------------------------\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('blink');\n                } else {\n                    cursor.removeClass('blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('inverted blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('inverted blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.slice(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.slice(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: calculate width of hte character\n        // ---------------------------------------------------------------------\n        function get_char_width() {\n            var $prompt = self.find('.prompt');\n            var html = $prompt.html();\n            $prompt.html('<span>&nbsp;</span>');\n            var width = $prompt.find('span')[0].getBoundingClientRect().width;\n            $prompt.html(html);\n            return width;\n        }\n        // ---------------------------------------------------------------------\n        // :: return number of characters in command line\n        // ---------------------------------------------------------------------\n        function get_num_chars(char_width) {\n            var width = self.width();\n            return Math.floor(width / char_width);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function get_splitted_command_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                return array.filter(function(line) {\n                    return !$.terminal.strip(line).match(/^ $/);\n                });\n            }\n            var line = prompt_node.find('.line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += ' ';\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1 && array[array.length - 1].length === num_chars) {\n                array.push('');\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position\n                });\n                var formatted = $.terminal.apply_formatters(string, options);\n                var output = formatted[0];\n                var max = $.terminal.length(output);\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                    // fix issue with nested formatting where max length\n                    // is checked before nested_formatting flatten formatting\n                    if (formatted_position > max) {\n                        formatted_position = max;\n                    }\n                }\n                output = $.terminal.normalize(output);\n                return output;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            string = $.terminal.format(encoded, {\n                char_width: settings.char_width\n            });\n            var re = /(<span[^>]+data-text[^>]+>)(.*?)(<\\/span>)/g;\n            return string.replace(re, '$1<span>$2</span>$3');\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\\\]$/)) {\n                        string = string.replace(/\\\\]/g, '\\\\\\\\]');\n                    }\n                } else {\n                    if (string.match(/\\\\$/)) {\n                        string += '\\\\';\n                    }\n                    string = '[[;;]' + string + ']';\n                }\n                return string;\n            }\n            var len = length(string);\n            if (len === 1) {\n                return formatting(string);\n            }\n            var result = [];\n            // len - 1 break the command line $.terminal.substring will return\n            // empty string for out of bound indexes\n            for (var i = 0; i < len; ++i) {\n                var text = $.terminal.substring(string, i, i + 1);\n                result.push(formatting(text));\n            }\n            return result.join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str) {\n            return $.terminal.length(str);\n        }\n        // ---------------------------------------------------------------------\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, options) {\n                var settings = $.extend({\n                    prompt: '',\n                    last: false\n                }, options);\n                var position = settings.position;\n                var len = length(string);\n                var prompt = settings.prompt;\n                if (ch_unit_bug) {\n                    cursor.width(char_width);\n                }\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                // fix for command line selection\n                var cond = settings.last || settings.length === 1;\n                var noselect = settings.position === (cond ? len : len - 1);\n                cursor.toggleClass('noselect', noselect);\n                // fix for animation when changing --animation dynamically\n                fix_cursor();\n                var cursor_len = $.terminal.length(cursor.text());\n                if (cursor_len > 1) {\n                    var node = cursor.find('[data-text]')[0];\n                    node.style.setProperty('--length', cursor_len);\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            function div(string, before) {\n                return '<div role=\"presentation\" aria-hidden=\"true\">' +\n                    format(string, before || '') +\n                    '</div>';\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                var formatted = formatting(string);\n                var pos;\n                if (length(formatted) === text(string).length) {\n                    pos = position;\n                } else {\n                    pos = formatted_position;\n                }\n                var i;\n                self.find('div:not(.cursor-line,.clipboard-wrapper)').remove();\n                self.css('visibility', 'hidden');\n                before.html('');\n                // long line\n                if (strlen(text(formatted)) > num_chars - prompt_len - 1 ||\n                    formatted.match(/\\n/)) {\n                    var tabs = formatted.match(/\\t/g);\n                    var original_string = formatted;\n                    //quick tabulation hack\n                    if (tabs) {\n                        formatted = formatted.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = get_splitted_command_line(formatted);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], {\n                            length: array.length,\n                            position: pos,\n                            prompt: prompt_last_line\n                        });\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', {\n                            length: array.length,\n                            position: 0,\n                            last: array.length <= 2\n                        });\n                        if (array.length > 2) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, {\n                                length: array.length,\n                                position: new_pos,\n                                last: true\n                            });\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, {\n                                length: array.length,\n                                position: new_pos\n                            });\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                    self.find('.cursor-line ~ div:last-of-type').append('<span></span>');\n                } else if (formatted === '') {\n                    before.html('');\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else {\n                    draw_cursor_line(formatted, {\n                        length: 1,\n                        position: pos\n                    });\n                }\n                var in_line = cursor_line.prevUntil('.prompt').length;\n                if (is_css_variables_supported) {\n                    self[0].style.setProperty('--cursor-line', in_line);\n                } else {\n                    clip.css('top', in_line * 14 + 'px');\n                }\n                self.css('visibility', '');\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function cmp(search_pos, pos) {\n                var opts = $.extend({}, settings, {\n                    position: pos\n                });\n                var guess = $.terminal.apply_formatters(command, opts)[1];\n                if (guess === search_pos) {\n                    return 0;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = text(string);\n                var codepoint_len = string.length;\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var draw_prompt = (function() {\n            function set(prompt) {\n                prompt = $.terminal.apply_formatters(prompt, {});\n                prompt = $.terminal.normalize(prompt);\n                prompt = crlf(prompt);\n                last_rendered_prompt = prompt;\n                var lines = $.terminal.split_equal(prompt, num_chars);\n                var options = {\n                    char_width: settings.char_width\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                var formatted = lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(line, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"line\">' +\n                        $.terminal.format(line, options) +\n                        '</span>';\n                }).concat([last_line]).join('\\n');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    prompt_len = strlen(text(encoded_last_line));\n                }\n            }\n            return function() {\n                switch (typeof prompt) {\n                    case 'string':\n                        set(prompt);\n                        break;\n                    case 'function':\n                        prompt.call(self, set);\n                        break;\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange.call(self, command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function clean(string) {\n            return string.replace(/((?!\\\\).)\\\\(?:&#93;|])/g, '$1&#93;');\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed, string;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        string = text(command);\n                        string = string.slice(0, position + n) +\n                            string.slice(position, string.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                    }\n                } else if (command !== '') {\n                    string = text(command);\n                    if (position < string.length) {\n                        removed = string.slice(position).slice(0, n);\n                        string = string.slice(0, position) +\n                            string.slice(position + n, string.length);\n                    }\n                }\n                if (removed) {\n                    command = clean(string);\n                }\n                redraw();\n                fix_textarea();\n                fire_change_command();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = clean(string);\n                    if (!stay) {\n                        self.position(text(command).length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    var original = default_keymap[key];\n                    if (is_function(original)) {\n                        original = original.bind(self);\n                    }\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn.call(self, e, original);\n                    };\n                }\n                if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                var bare_command = text(command);\n                var len = text(string).length;\n                if (position === bare_command.length) {\n                    string = bare_command + string;\n                } else if (position === 0) {\n                    string = string + bare_command;\n                } else {\n                    string = bare_command.slice(0, position) +\n                        string + bare_command.slice(position);\n                }\n                command = clean(string);\n                if (!stay) {\n                    self.position(len, true, true);\n                } else {\n                    fix_textarea();\n                }\n                redraw();\n                fire_change_command();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cursor').next().remove().end().prev().remove().\n                    end().remove();\n                self.find('.prompt, .clipboard').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === true) {\n                    return last_rendered_prompt;\n                } else if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    draw_prompt();\n                    // we could check if command is longer then numchars-new\n                    // prompt\n                    redraw();\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    var len = text(command).length;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > len) {\n                        position = len;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position && !silent) {\n                        redraw();\n                        if (is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    var string = formatting(command, true);\n                    var len = length(string);\n                    var command_len = text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (text(string).length === length(command)) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(new_formatted_pos);\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                char_width = get_char_width();\n                if (num) {\n                    num_chars = num;\n                } else {\n                    num_chars = get_num_chars(char_width);\n                }\n                redraw();\n                draw_prompt();\n                return self;\n            },\n            invoke_key: function(shortcut) {\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            enable: function() {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        if (clip.is(':not(:focus)')) {\n                            clip.focus();\n                        }\n                        clip.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE ignore\n                    }\n                    animation(true);\n                    if (is_function(prompt)) {\n                        draw_prompt();\n                    }\n                    fix_cursor();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        //debug_object(self, 'cmd')('display_position');\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (typeof settings.prompt === 'string') {\n            prompt = settings.prompt;\n        } else {\n            prompt = '> ';\n        }\n        draw_prompt();\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        char_width = get_char_width();\n        num_chars = get_num_chars(char_width);\n        if (!settings.history) {\n            history.disable();\n        }\n        var first_up_history = true;\n        // prevent_keypress - hack for Android that was inserting characters on\n        // backspace\n        var prevent_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        // ---------------------------------------------------------------------\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            var result;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            if (!e.fake) {\n                no_keypress = true;\n                no_keydown = false;\n            }\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e);\n                if (result !== undefined) {\n                    //prevent_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                self.oneTime(settings.holdTimeout, 'hold', function() {\n                    hold = true;\n                });\n                if (hold) {\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0 &&\n                        key.indexOf(settings.repeatTimeoutKeys) !== -1) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                if (e.which !== 38 && !(e.which === 80 && e.ctrlKey)) {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    prevent_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //prevent_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (prevent_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress.call(self, e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native || e.fake) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val();\n            if (!is_mobile) {\n                val = val.replace(/^ /, '');\n            }\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if ((no_keydown || process || ((no_keypress || dead_key) && !skip_insert &&\n                                          (single_key || no_key) && !backspace)) &&\n                val !== command) {\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.slice(0, cmd.length - 1).length === val.length;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var chr = val.slice(position);\n                    if (chr.length === 1 || backspace) {\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = chr.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : chr, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, chr.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        doc.bind('keypress.cmd', keypress_event).bind('keydown.cmd', keydown_event)\n            .bind('keyup.cmd', clear_hold).bind('input.cmd', input_event);\n        (function() {\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    if (!$target.is('.prompt') && down) {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(text(command).length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_text() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /^(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /^(\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD]))/;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\](?:[^\\]]*[^\\\\](\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[([!gbiuso]*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]\\\\]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]+)\\]?/gi;\n    var format_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]$/gi;\n    var color_hex_re = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    var url_re = /(\\bhttps?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_begin_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\]?$/i;\n    var format_exec_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: TOOLS\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        var agent = window.navigator.userAgent;\n        if (agent.match(/MSIE|Trident/) && !agent.match(/IEMobile/)) {\n            return false;\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = window.CSS && window.CSS.supports &&\n            window.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = window.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n\n    // -------------------------------------------------------------------------\n    // IE ch unit bug detection - better that UserAgent that can be changed\n    var ch_unit_bug = false;\n    $(function() {\n        function width(e) {\n            return e[0].getBoundingClientRect().width;\n        }\n        var base = '<span style=\"font-family: monospace;visibility:hidden;';\n        var ch = $(base + 'width:1ch;overflow: hidden\">&nbsp;</span>').appendTo('body');\n        var space = $(base + '\">&nbsp;</span>').appendTo('body');\n        ch_unit_bug = width(ch) !== width(space);\n        ch.remove();\n        space.remove();\n    });\n\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return $('<span>' + safe(string) + '</span>').text();\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        var match_emoji = string.match(emoji_re);\n        if (match_emoji) {\n            return match_emoji[1];\n        } else if (string.slice(0, 2).replace(astral_symbols_re, '_') === 1) {\n            if (string.slice(1).match(combine_chr_re)) {\n                return string.slice(0, 3);\n            }\n            return string.slice(0, 2);\n        } else {\n            var match_combo = string.match(combine_chr_re);\n            if (match_combo) {\n                return match_combo[1];\n            }\n            return string[0];\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji and extra chars\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + chr.length;\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        if (is_ch_unit_supported) {\n            return 'width: ' + len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.char_width) {\n                return 'width: ' + (options.char_width * len) + 'px';\n            }\n        } else {\n            return '--length: ' + len;\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len !== $.terminal.length(bare)) {\n                return char_width_prop(len, options);\n            }\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {len: strlen(chr), chr: chr};\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            str: spec.chr\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            str: last.str + spec.chr\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    str: spec.chr,\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return spec.str;\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + spec.str + '</span>';\n                } else {\n                    return '<span style=\"' + style + '\">' + spec.str + '</span>';\n                }\n            }).join('');\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var cmp = compare_fn(search_pos, mid);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn\n            );\n        } else {\n            return -1;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :: Cross-Browser selection utils\n    // ---------------------------------------------------------------------\n    var get_selected_text = (function() {\n        if (window.getSelection || document.getSelection) {\n            return function() {\n                var selection = (window.getSelection || document.getSelection)();\n                if (selection.text) {\n                    return selection.text;\n                } else {\n                    return selection.toString();\n                }\n            };\n        } else if (document.selection && document.selection.type !== \"Control\") {\n            return function() {\n                return document.selection.createRange().text;\n            };\n        }\n        return function() {\n            return '';\n        };\n    })();\n    // ---------------------------------------------------------------------\n    // :: try to copy given DOM element text to clipboard\n    // -----------------------------------------------------------------------\n    function text_to_clipboard(container, text) {\n        var $div = $('<div>' + text.replace(/\\n/, '<br/>') + '<div>');\n        $div.appendTo('body');\n        select_all($div[0]);\n        try {\n            document.execCommand('copy');\n        } catch (e) {}\n        $div.remove();\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return function() {\n                return '';\n            };\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function select_all(element) {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                selection.setBaseAndExtent(element, 0, element, 1);\n            } else if (document.createRange) {\n                var range = document.createRange();\n                range.selectNodeContents(element);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    function process_command(string, fn) {\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.slice(name.length).trim();\n            return {\n                command: string,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: string,\n                name: '',\n                args: [],\n                args_quotes: quotes,\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: '2.1.0',\n        date: 'Sun, 20 Jan 2019 10:58:06 +0000',\n        // colors from http://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_hex_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            function substring(string, start, end) {\n                return string.slice(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = position;\n            var start;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (rex.global) {\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, rex.lastIndex));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = match.index;\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            length(rep_string) -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += length(rep_string) - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!rex.global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.slice(i - 6, i) === '&nbsp;' ||\n                    string.slice(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            var entity_re = /^(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n            function match_entity(index) {\n                return string.slice(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i - 1] !== '\\\\' && string[i] === '\\\\' &&\n                    string[i + 1] === ']';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return not_formatting && (string[i] !== ']' || !have_formatting)\n                    && !opening;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var space_count = -1;\n            var prev_space;\n            var length = 0;\n            var offset = 0;\n            for (var i = 0; i < string.length; i++) {\n                var substring = string.slice(i);\n                match = substring.match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_space(i) && (not_formatting || opening)) {\n                    if (space === -1 && prev_space !== i || space !== -1) {\n                        space = i;\n                        space_count = count;\n                    }\n                }\n                var braket = string[i].match(/[[\\]]/);\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] and \\\\ counts as one character\n                        ++count;\n                        ++length;\n                        offset = 1;\n                        i += 1;\n                    } else if (!braket || !have_formatting) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var data = {\n                        count: count,\n                        index: i - offset,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        size: offset + 1,\n                        space: space,\n                        space_count: space_count\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                            continue;\n                        }\n                    }\n                } else if (i === string.length - 1) {\n                    callback({\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n                // handle emoji, suroggate pairs and combine characters\n                var char = get_next_character(substring);\n                if (char.length > 1) {\n                    i += char.length - 1;\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(text(string));\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var re = /(&[^;]+);$/;\n            var offset = 1;\n            $.terminal.iterate_formatting(string, function(data) {\n                var m;\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    // correct index for html entity\n                    m = string.slice(0, start + 1).match(re);\n                    if (m) {\n                        start -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                    offset = data.size;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    m = string.slice(0, end + 1).match(re);\n                    if (m) {\n                        end -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        end = prev_index + offset;\n                    }\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.slice(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            return string.replace(format_re, function(_, format, text) {\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                } else {\n                    semicolons = '';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                return '[[' + format + semicolons + safe(text) + ']' + text + ']';\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var chars = $.terminal.split_characters(text(line));\n                var last_char = chars[chars.length - 1];\n                var end_index = line_length - (last_char ? last_char.length : 1);\n                var last_bracket = !!line.match(/\\[\\[[^\\]]+\\](?:[^\\][]|\\\\\\])+\\]$/);\n                if (last_bracket) {\n                    end_index -= 1;\n                }\n                $.terminal.iterate_formatting(line, function(data) {\n                    var last_iteraction = data.index === end_index;\n                    var chr, substring;\n                    if (data.length >= length || last_iteraction ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        // TODO: this need work\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line).slice(data.space_count);\n                            // real length, not counting formatting\n                            var text_len = stripped.length;\n                            var limit = data.count + length + 1;\n                            stripped = stripped.slice(0, limit).trim();\n                            if (stripped.match(/\\s/) || limit < text_len) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            data.index !== line_length - 1 && can_break) {\n                            output = line.slice(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.slice(data.index);\n                            chr = get_next_character(substring);\n                            output = line.slice(first_index, data.index) + chr;\n                            if (last_iteraction && last_bracket && chr !== ']') {\n                                output += ']';\n                            }\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/^(&nbsp;|\\s)+|(&nbsp;|\\s)+$/g, '');\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|[a-zA-Z]+;)/g, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\])[\\s\\S]*/;\n            return string.split(re).filter(Boolean).map(function(string) {\n                if (string.match(/^\\[\\[/)) {\n                    if (!$.terminal.is_formatting(string)) {\n                        string += ']';\n                        stack.push(string.replace(format_re, '$1'));\n                    }\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        string = stack[stack.length - 1] + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            var formatters = $.terminal.defaults.formatters;\n            settings = settings || {};\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (ret instanceof Array && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] <= length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                return [string, -1];\n                            } else {\n                                if (formatter instanceof Array) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        format: function format(str, options) {\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                anyLinks: false\n            }, options || {});\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, function(\n                            s,\n                            style,\n                            color,\n                            background,\n                            _class,\n                            data_text,\n                            text\n                        ) {\n                            if (text === '') {\n                                return ''; //'<span>&nbsp;</span>';\n                            }\n                            // inside formatting we need to unescape escaped slashes\n                            text = safe(text).replace(/\\\\\\\\/g, '\\\\');\n                            var style_str = '';\n                            if (style.indexOf('b') !== -1) {\n                                style_str += 'font-weight:bold;';\n                            }\n                            var text_decoration = [];\n                            if (style.indexOf('u') !== -1) {\n                                text_decoration.push('underline');\n                            }\n                            if (style.indexOf('s') !== -1) {\n                                text_decoration.push('line-through');\n                            }\n                            if (style.indexOf('o') !== -1) {\n                                text_decoration.push('overline');\n                            }\n                            if (text_decoration.length) {\n                                style_str += 'text-decoration:' +\n                                    text_decoration.join(' ') + ';';\n                            }\n                            if (style.indexOf('i') !== -1) {\n                                style_str += 'font-style:italic;';\n                            }\n                            if ($.terminal.valid_color(color)) {\n                                style_str += 'color:' + color + ';' +\n                                    '--color:' + color + ';';\n                                if (style.indexOf('g') !== -1) {\n                                    style_str += 'text-shadow:0 0 5px ' + color + ';';\n                                }\n                            }\n                            if ($.terminal.valid_color(background)) {\n                                style_str += 'background-color:' + background + ';';\n                            }\n                            var data;\n                            if (data_text === '') {\n                                data = text;\n                            } else {\n                                data = data_text.replace(/&#93;/g, ']')\n                                    .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n                            }\n                            var extra = extra_css(text, options);\n                            if (extra) {\n                                text = wide_characters(text, options);\n                                style_str += extra;\n                            }\n                            var result;\n                            if (style.indexOf('!') !== -1) {\n                                if (data.match(email_re)) {\n                                    result = '<a href=\"mailto:' + data + '\"';\n                                } else {\n                                    if (!settings.anyLinks &&\n                                        !data.match(/^((https?|ftp):\\/\\/|\\.{0,2}\\/)/)) {\n                                        data = '';\n                                    }\n                                    result = '<a target=\"_blank\"';\n                                    if (data) {\n                                        result += ' href=\"' + data + '\"';\n                                    }\n                                    var rel = [\"noopener\"];\n                                    if (settings.linksNoReferrer) {\n                                        rel.unshift(\"noreferrer\");\n                                    }\n                                    if (settings.linksNoFollow) {\n                                        rel.unshift(\"nofollow\");\n                                    }\n                                    result += ' rel=\"' + rel.join(' ') + '\"';\n                                }\n                                // make focus to terminal textarea that will enable\n                                // terminal when pressing tab and terminal is disabled\n                                result += ' tabindex=\"1000\"';\n                            } else {\n                                result = '<span';\n                            }\n                            if (style_str !== '') {\n                                result += ' style=\"' + style_str + '\"';\n                            }\n                            if (_class !== '') {\n                                result += ' class=\"' + _class + '\"';\n                            }\n                            if (style.indexOf('!') !== -1) {\n                                result += '>' + text + '</a>';\n                            } else {\n                                result += ' data-text=\"' +\n                                    data.replace(/\"/g, '&quote;') + '\">' +\n                                    text + '</span>';\n                            }\n                            return result;\n                        });\n                    } else {\n                        text = safe(text);\n                        var extra = extra_css(text, options);\n                        if (extra.length) {\n                            text = wide_characters(text, options);\n                            return '<span style=\"' + extra + '\">' + text + '</span>';\n                        } else {\n                            return '<span>' + text + '</span>';\n                        }\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;').replace(/\\]/g, '&#93;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[').replace(/&#93;/g, ']');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string) {\n            return $.terminal.split_characters(text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.slice(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // :: after adding align tabs arr.join('\\t\\t') looks much better\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            var no_formatting = array.map(function(string) {\n                return $.terminal.strip(string);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            str = str.replace(format_parts_re, '$6');\n            return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                return bracket;\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(^|(?:\\\\\\\\(?:\\\\\\\\)*)?)\" + quote, \"g\");\n                        string = string.replace(re, \"$1\");\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                if (typeof arg !== 'string') {\n                    arg = String(arg);\n                }\n                if (arg.match(/^-/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (arg.match(/^--/)) {\n                    var name = arg.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (arg.match(/^-/)) {\n                    var single = arg.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [{ .... }]\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        return;\n                    }\n                    string = m[1];\n                    var obj = m[2] === 'terminal' ? term : term.cmd();\n                    var fn = m[3];\n                    try {\n                        var args = eval('[' + m[4] + ']');\n                        if (!obj[fn]) {\n                            term.error('Unknow function ' + fn);\n                        } else {\n                            obj[fn].apply(term, args);\n                        }\n                    } catch (e) {\n                        term.error('Invalid invocation in ' +\n                                   $.terminal.escape_brackets(string));\n                    }\n                } else {\n                    term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: ES6 iterator for a given string that handle emoji and formatting\n        // ---------------------------------------------------------------------\n        iterator: function(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                }\n                return string;\n            }\n            if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n                var len = $.terminal.length(string);\n                var i = 0;\n                var obj = {};\n                obj[Symbol.iterator] = function() {\n                    return {\n                        next: function() {\n                            if (i < len) {\n                                var text = $.terminal.substring(string, i, i + 1);\n                                i++;\n                                return {\n                                    value: formatting(text)\n                                };\n                            } else {\n                                return {\n                                    done: true\n                                };\n                            }\n                        }\n                    };\n                };\n                return obj;\n            }\n        },\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    $.terminal.Exception.prototype.toString = function() {\n        return this.message + '\\n' + this.stack;\n    };\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n\n    // -----------------------------------------------------------------------\n    /*\n    function is_scrolled_into_view(elem) {\n        var docViewTop = $(window).scrollTop();\n        var docViewBottom = docViewTop + $(window).height();\n\n        var elemTop = $(elem).offset().top;\n        var elemBottom = elemTop + $(elem).height();\n\n        return ((elemBottom >= docViewTop) && (elemTop <= docViewBottom));\n    }\n    */\n    // -----------------------------------------------------------------------\n    function terminal_ready(term) {\n        return !!(term.closest('body').length &&\n                  term.is(':visible') &&\n                  term.find('.prompt').length);\n    }\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(term) {\n        var rect;\n        if (terminal_ready(term)) {\n            var $prompt = term.find('.prompt').clone().css({\n                visiblity: 'hidden',\n                position: 'absolute'\n            });\n            $prompt.appendTo(term.find('.cmd')).html('&nbsp;');\n            rect = $prompt[0].getBoundingClientRect();\n            $prompt.remove();\n        } else {\n            var temp = $('<div class=\"terminal temp\"><div class=\"terminal-output\">' +\n                         '<div><div class=\"line\" style=\"float: left\"><span>&nbsp;' +\n                         '</span></div></div></div></div>').appendTo('body');\n            temp.addClass(term.attr('class')).attr('id', term.attr('id'));\n            if (term) {\n                var style = term.attr('style');\n                if (style) {\n                    style = style.split(/\\s*;\\s*/).filter(function(s) {\n                        return !s.match(/display\\s*:\\s*none/i);\n                    }).join(';');\n                    temp.attr('style', style);\n                }\n            }\n            rect = temp.find('.line')[0].getBoundingClientRect();\n        }\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        if (temp) {\n            temp.remove();\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        return Math.floor(terminal.find('.terminal-fill').height() / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        return typeof object === 'function' ? 'function' : $.type(object);\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2019 Jakub T. Jankiewicz ' +\n        '<http://jcubic.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2019 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        tabindex: 1,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        linksNoReferrer: false,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        onCommandChange: null,\n        onPositionChange: null,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        doubleTab: null,\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onPaste: $.noop,\n        onFlush: $.noop,\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong password try again!',\n            wrongPassword: 'Wrong password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveCall: 'Recursive call detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (object instanceof Array) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // Display line code in the file if line numbers are present\n        function print_line(url_spec) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    self.echo('[[b;white;]' + file + ']');\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    self.echo(code.slice(n - 2, n + 3).map(function(line, i) {\n                        if (i === 2) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return '[' + (n + i - 1) + ']: ' + line;\n                    }).join('\\n')).resume();\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token();\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                // command = split_command_line(command);\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error('Error: ' + (e.message || e));\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                /*\n                if (login) {\n                    var token = self.token(true);\n                    if (token) {\n                        command.args = [token].concat(command.args);\n                    } else {\n                        terminal.error('&#91;AUTH&#93; ' + strings.noTokenError);\n                        return;\n                    }\n                }*/\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = response.procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.ignoreSystemDescribe) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Draw line - can have line breaks and be longer than the width of\n        // :: the terminal, there are 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: NOTE: it formats and appends lines to output_buffer. The actual\n        // :: append to terminal output happens in the flush function\n        // ---------------------------------------------------------------------\n        var output_buffer = [];\n        var NEW_LINE = 1;\n        function buffer_line(string, index, options) {\n            // urls should always have formatting to keep url if split\n            var i, len;\n            output_buffer.push(NEW_LINE);\n            if (string === '') {\n                // ignore empty string, it can happen if line was a function\n                // that returned empty string in this case whe need to add container\n                // because on update/resize it can return content\n            } else if (!options.raw) {\n                var format_options = {\n                    linksNoReferrer: settings.linksNoReferrer,\n                    linksNoFollow: settings.linksNoFollow,\n                    anyLinks: settings.anyLinks,\n                    char_width: char_size.width\n                };\n                string = $.terminal.normalize(string);\n                var cols = self.cols();\n                if ((strlen(text(string)) > cols ||\n                     string.match(/\\n/)) &&\n                    ((settings.wrap === true && options.wrap === undefined) ||\n                     settings.wrap === false && options.wrap === true)) {\n                    var words = options.keepWords;\n                    var array = $.terminal.split_equal(string, cols, words);\n                    for (i = 0, len = array.length; i < len; ++i) {\n                        if (array[i] === '' || array[i] === '\\r') {\n                            output_buffer.push('<span></span>');\n                        } else {\n                            output_buffer.push($.terminal.format(\n                                array[i],\n                                format_options\n                            ));\n                        }\n                    }\n                } else {\n                    string = $.terminal.format(string, format_options);\n                    string.split(/\\n/).forEach(function(string) {\n                        output_buffer.push(string);\n                    });\n                }\n            } else {\n                output_buffer.push(string);\n            }\n            output_buffer.push({\n                finalize: options.finalize,\n                index: index\n            });\n        }\n        // ---------------------------------------------------------------------\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop\n                }, line.options || {});\n                var string;\n                var arg = line.string;\n                var is_fn = is_function(arg);\n                if (is_fn) {\n                    arg = arg();\n                }\n                if (get_type(arg) !== 'string') {\n                    if (is_function(settings.parseObject)) {\n                        var ret = settings.parseObject(arg);\n                        if (get_type(ret) === 'string') {\n                            string = ret;\n                        }\n                    } else if (arg instanceof Array) {\n                        string = $.terminal.columns(arg, self.cols(), settings.tabs);\n                    } else {\n                        string = String(arg);\n                    }\n                } else {\n                    string = arg;\n                }\n                if (string !== '') {\n                    // string can be empty after removing extended commands\n                    if (string !== '') {\n                        if (!line_settings.raw) {\n                            if (settings.convertLinks) {\n                                string = string.replace(email_re, '[[!;;]$1]').\n                                    replace(url_nf_re, '[[!;;]$1]');\n                            }\n                            if (line_settings.formatters) {\n                                try {\n                                    string = $.terminal.apply_formatters(\n                                        string,\n                                        settings\n                                    );\n                                } catch (e) {\n                                    display_exception(e, 'FORMATTING');\n                                }\n                            }\n                            var parts = string.split(format_exec_re);\n                            string = $.map(parts, function(string) {\n                                if (string && string.match(format_exec_re) &&\n                                    !$.terminal.is_formatting(string)) {\n                                    // redraw should not execute commands and it have\n                                    // and lines variable have all extended commands\n                                    string = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                                    if (line_settings.exec) {\n                                        var prev_cmd;\n                                        if (prev_command) {\n                                            prev_command = prev_command.command.trim();\n                                        }\n                                        if (prev_cmd === string.trim()) {\n                                            self.error(strings().recursiveCall);\n                                        } else {\n                                            $.terminal.extended_command(self, string, {\n                                                invokeMethods: settings.invokeMethods\n                                            });\n                                        }\n                                    }\n                                    return '';\n                                } else {\n                                    return string;\n                                }\n                            }).join('');\n                            if (string !== '') {\n                                string = crlf($.terminal.normalize(string));\n                                string = $.terminal.encode(string, {\n                                    tabs: settings.tabs\n                                });\n                            }\n                        }\n                        if (string !== '') {\n                            buffer_line(string, line.index, line_settings);\n                        }\n                    }\n                }\n                if (string === '' && is_fn) {\n                    buffer_line(string, line.index, line_settings);\n                }\n            } catch (e) {\n                output_buffer = [];\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            var lines_to_show = [];\n            // Dead code\n            if (settings.outputLimit >= 0) {\n                // flush will limit lines but if there is lot of\n                // lines we don't need to show them and then remove\n                // them from terminal\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                lines.forEach(function(line, index) {\n                    var string = line[0];\n                    var options = line[1];\n                    if (get_type(string) === 'function') {\n                        string = string();\n                    }\n                    if (get_type(string) !== 'string') {\n                        string = String(string);\n                    }\n                    lines_to_show.push({\n                        string: string,\n                        index: index,\n                        options: options\n                    });\n                });\n                lines_to_show = lines_to_show.slice(lines_to_show.length - limit - 1);\n            } else {\n                lines_to_show = lines.map(function(line, index) {\n                    return {\n                        string: line[0],\n                        index: index,\n                        options: line[1]\n                    };\n                });\n            }\n            try {\n                output_buffer = [];\n                $.each(lines_to_show, function(i, line) {\n                    process_line(line);\n                });\n                if (!options.update) {\n                    command_line.before(detached_output); // reinsert output\n                }\n                self.flush(options);\n                fire_event('onAfterRedraw');\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    try {\n                        settings.greetings.call(self, self.echo);\n                    } catch (e) {\n                        settings.greetings = null;\n                        display_exception(e, 'greetings');\n                    }\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            var prompt = command_line.prompt(true);\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    command = command.replace(/./g, mask);\n                    break;\n                case 'boolean':\n                    if (mask) {\n                        command = command.replace(/./g, settings.maskChar);\n                    } else {\n                        command = $.terminal.escape_formatting(command);\n                    }\n                    break;\n            }\n            var options = {\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('command'));\n                    fire_event('onEchoCommand', [div, command]);\n                }\n            };\n            if (is_function(prompt)) {\n                var ret = prompt(function(string) {\n                    self.echo(string + command, options);\n                });\n                if (ret && is_function(ret.then)) {\n                    ret.then(function(string) {\n                        if (typeof string === 'string') {\n                            self.echo(string + command, options);\n                        }\n                    });\n                }\n            } else {\n                self.echo(prompt + command, options);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            if (self.is('body')) {\n                // source: https://stackoverflow.com/a/6639405/387194\n                // from comment by Šime Vidas\n                return window.innerWidth - document.documentElement.clientWidth > 0;\n            }\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n                deferred.resolve();\n                fire_event('onAfterCommand', [command]);\n            }\n            // -----------------------------------------------------------------\n            function show(result) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                self.resume();\n            }\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                if (result) {\n                    // auto pause/resume when user return promises\n                    self.pause(settings.softPause);\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        (result.done || result.then).call(result, show);\n                    } else {\n                        return $.when(result).done(show);\n                    }\n                } else if (paused) {\n                    resume_callbacks.push(function() {\n                        // exec with resume/pause in user code\n                        after_exec();\n                    });\n                } else {\n                    after_exec();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (fire_event('onBeforeCommand', [command]) === false) {\n                    return;\n                }\n                if (!exec) {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (is_function(settings.onBeforeLogout)) {\n                try {\n                    if (settings.onBeforeLogout.call(self, self) === false) {\n                        return;\n                    }\n                } catch (e) {\n                    settings.onBeforeLogout = $.noop;\n                    display_exception(e, 'onBeforeLogout');\n                }\n            }\n            clear_loging_storage();\n            if (is_function(settings.onAfterLogout)) {\n                try {\n                    settings.onAfterLogout.call(self, self);\n                } catch (e) {\n                    settings.onAfterLogout = $.noop;\n                    display_exception(e, 'onAfterlogout');\n                }\n            }\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            command_line.name(name + (login ? '_' + login : ''));\n            if (interpreter.prompt !== command_line.prompt()) {\n                if (is_function(interpreter.prompt)) {\n                    command_line.prompt(function(callback) {\n                        var ret = interpreter.prompt.call(self, callback, self);\n                        if (ret && is_function(ret.then)) {\n                            ret.then(function(string) {\n                                if (typeof string === 'string') {\n                                    callback(string);\n                                }\n                            });\n                        }\n                    });\n                } else {\n                    command_line.prompt(interpreter.prompt);\n                }\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap($.omap(interpreter.keymap, function(name, fun) {\n                    return function() {\n                        var args = [].slice.call(arguments);\n                        try {\n                            return fun.apply(self, args);\n                        } catch (e) {\n                            display_exception(e, 'USER KEYMAP');\n                        }\n                    };\n                }));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_event(name, args) {\n            args = (args || []).concat([self]); // create new array\n            // even can be fired before interpreters is created\n            var top = interpreters && interpreters.top();\n            if (top && is_function(top[name])) {\n                try {\n                    return top[name].apply(self, args);\n                } catch (e) {\n                    delete top[name];\n                    display_exception(e, name);\n                }\n            } else if (is_function(settings[name])) {\n                try {\n                    return settings[name].apply(self, args);\n                } catch (e) {\n                    settings[name] = null;\n                    display_exception(e, name);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function move_cursor_visible() {\n            var cursor = self.find('.cursor');\n            if (!cursor.isFullyInViewport(self)) {\n                self.scrollTop(cursor.position().top - 5);\n                return true;\n            }\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                self.refresh(); // for case when showing long error before init\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                try {\n                    settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                    // throw e; // it will be catched by terminal\n                } finally {\n                    onPause = $.noop;\n                    if (!was_paused && self.enabled()) {\n                        // resume login if user didn't call pause in onInit\n                        // if user pause in onInit wait with exec until it\n                        // resume\n                        self.resume();\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                            self.echo('');\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                if (get_selected_text() === '') {\n                    var command = self.get_command();\n                    var position = self.get_position();\n                    command = command.slice(0, position) + '^C' +\n                        command.slice(position + 2);\n                    echo_command(command);\n                    self.set_command('');\n                }\n            },\n            'CTRL+L': function() {\n                self.clear();\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            if (result && is_function(result.then)) {\n                                result.then(resolve);\n                            }\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // then one terminal)\n            var result, i;\n            if (self.enabled()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (enabled && (!paused || !settings.pauseEvents)) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (self.is('body,html')) {\n            self = $('<div/>').appendTo('body');\n            $('body').addClass('full-screen-terminal');\n        }\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        // terminal already exists\n        if (self.data('terminal')) {\n            return self.data('terminal');\n        }\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        // var names = []; // stack if interpreter names\n        var prev_command; // used for name on the terminal if not defined\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var char_size = get_char_size(self);\n        var cmd_ready = ready(command_queue);\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        var lines = [];\n        var storage = new StorageHelper(settings.memory);\n        var enabled = settings.enabled;\n        var frozen = false;\n        var paused = false;\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        $.extend(self, $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                lines = [];\n                output.html('');\n                fire_event('onClear');\n                self.attr({scrollTop: 0});\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = fire_event('onExport');\n                user_export = user_export || {};\n                return $.extend({}, {\n                    focus: enabled,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                fire_event('onImport', [view]);\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines = clone(view.lines).filter(function(line) {\n                        return line[0];\n                    });\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // -------------------------------------------------------------\n            exec: function(command, silent, deferred) {\n                var d = deferred || new $.Deferred();\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (paused) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, d]);\n                    } else {\n                        // commands may return promise from user code\n                        // it will resolve exec promise when user promise\n                        // is resolved\n                        var ret = commands(command, silent, true);\n                        if (ret && (ret.done || ret.then)) {\n                            (ret.done || ret.then).call(ret, function() {\n                                d.resolve(self);\n                            });\n                        }\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function changes the prompt of the command line to login\n            // :: with a password and calls the user login function with\n            // :: the callback that expects a token. The login is successful\n            // :: if the user calls it with value that is truthy\n            // -------------------------------------------------------------\n            login: function(auth, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else if (self.token(true) && self.login_name(true)) {\n                    in_login = false;\n                    if (is_function(success)) {\n                        success();\n                    }\n                    return self;\n                }\n                // don't store login data in history\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                // so we know how many times call pop\n                var level = self.level();\n                function login_callback(user, token, silent) {\n                    if (token) {\n                        while (self.level() > level) {\n                            self.pop(undefined, true);\n                        }\n                        if (settings.history) {\n                            command_line.history().enable();\n                        }\n                        var name = self.prefix_name(true) + '_';\n                        storage.set(name + 'token', token);\n                        storage.set(name + 'login', user);\n                        in_login = false;\n                        if (is_function(success)) {\n                            // will be used internaly since users know\n                            // when login success (they decide when\n                            // it happen by calling the callback -\n                            // this funtion)\n                            success();\n                        }\n                    } else {\n                        if (infinite) {\n                            if (!silent) {\n                                self.error(strings().wrongPasswordTryAgain);\n                            }\n                            self.pop(undefined, true).set_mask(false);\n                        } else {\n                            in_login = false;\n                            if (!silent) {\n                                self.error(strings().wrongPassword);\n                            }\n                            self.pop(undefined, true).pop(undefined, true);\n                        }\n                        // used only to call pop in push\n                        if (is_function(error)) {\n                            error();\n                        }\n                    }\n                    self.off('terminal.autologin');\n                }\n                self.on('terminal.autologin', function(event, user, token, silent) {\n                    login_callback(user, token, silent);\n                });\n                self.push(function(user) {\n                    self.set_mask(settings.maskChar).push(function(pass) {\n                        try {\n                            var ret = auth.call(self, user, pass, function(\n                                token,\n                                silent) {\n                                login_callback(user, token, silent);\n                            });\n                            if (ret && is_function(ret.then)) {\n                                self.pause();\n                                ret.then(function(token) {\n                                    login_callback(user, token);\n                                    self.resume();\n                                });\n                            }\n                        } catch (e) {\n                            display_exception(e, 'AUTH');\n                        }\n                    }, {\n                        prompt: strings().password + ': ',\n                        name: 'password'\n                    });\n                }, {\n                    prompt: strings().login + ': ',\n                    name: 'login'\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().slice(0, pos);\n                var cmd_strings = command.split(' ');\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                // local copy\n                commands = commands.slice();\n                if (settings.clear && $.inArray('clear', commands) === -1) {\n                    commands.push('clear');\n                }\n                if (settings.exit && $.inArray('exit', commands) === -1) {\n                    commands.push('exit');\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (regex.test(commands[i])) {\n                            var match = commands[i];\n                            if (quote === '\"') {\n                                match = match.replace(/\"/g, '\\\\\"');\n                            }\n                            if (!quote && options.escape) {\n                                match = match.replace(/([\"'() ])/g, '\\\\$1');\n                            }\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.slice(0, pos);\n                    var post = text.slice(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.slice().reverse().join('\\t\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(string, matched, sensitive);\n                        if (common) {\n                            replace(string, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return paused;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    paused = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.prompt').hidden();\n                    }\n                    fire_event('onPause');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function() {\n                cmd_ready(function ready() {\n                    paused = false;\n                    if (enabled && terminals.front() === self) {\n                        command_line.enable();\n                    }\n                    command_line.find('.prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    self.scroll_to_bottom();\n                    fire_event('onResume');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (typeof num_chars === 'undefined' || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (typeof num_rows === 'undefined') {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        self.enable(silent);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze) {\n                        self.disable();\n                        frozen = true;\n                    } else {\n                        frozen = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return frozen;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!enabled && !frozen) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!silent && !enabled) {\n                            fire_event('onFocus');\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            enabled = true;\n                            if (!self.paused()) {\n                                command_line.enable();\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && enabled) {\n                        ret = fire_event('onBlur');\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        enabled = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return enabled;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lenghts = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lenghts) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, stay) {\n                if (typeof string === 'string') {\n                    when_ready(function ready() {\n                        var bottom = self.is_bottom();\n                        command_line.insert(string, stay);\n                        if (settings.scrollOnEcho || bottom) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: function(prompt) {\n                when_ready(function ready() {\n                    if (is_function(prompt)) {\n                        command_line.prompt(function(callback) {\n                            prompt.call(self, callback, self);\n                        });\n                    } else {\n                        command_line.prompt(prompt);\n                    }\n                    interpreters.top().prompt = prompt;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines;\n                } else {\n                    return $.map(lines, function(item) {\n                        return is_function(item[0]) ? item[0]() : item[0];\n                    }).join('\\n');\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        command_line.resize(settings.numChars);\n                        self.refresh();\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        command_line.resize(num_chars);\n                        self.refresh();\n                        fire_event('onResize');\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    self[0].style.setProperty('--char-width', char_size.width);\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                try {\n                    var bottom = self.is_bottom();\n                    var wrapper;\n                    // print all lines\n                    // var output_buffer = lines.flush();\n                    $.each(output_buffer, function(i, line) {\n                        if (line === NEW_LINE) {\n                            wrapper = $('<div></div>');\n                        } else if ($.isPlainObject(line) && is_function(line.finalize)) {\n                            // this is finalize function from echo\n                            if (options.update) {\n                                var selector = '> div[data-index=' + line.index + ']';\n                                var node = output.find(selector);\n                                if (node.html() !== wrapper.html()) {\n                                    node.replaceWith(wrapper);\n                                }\n                            } else {\n                                wrapper.appendTo(output);\n                            }\n                            line.finalize(wrapper.attr('data-index', line.index));\n                        } else {\n                            $('<div/>').html(line)\n                                .appendTo(wrapper).width('100%');\n                        }\n                    });\n                    limit_lines();\n                    fire_event('onFlush');\n                    //num_rows = get_num_rows(self, char_size);\n                    if ((settings.scrollOnEcho && options.scroll) || bottom) {\n                        self.scroll_to_bottom();\n                    }\n                    output_buffer = [];\n                } catch (e1) {\n                    if (is_function(settings.exceptionHandler)) {\n                        try {\n                            settings.exceptionHandler.call(self, e1, 'TERMINAL (Flush)');\n                        } catch (e2) {\n                            settings.exceptionHandler = $.noop;\n                            alert_exception('[exceptionHandler]', e2);\n                        }\n                    } else {\n                        alert_exception('[Flush]', e1);\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, string, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length + line; // yes +\n                    }\n                    if (!lines[line]) {\n                        self.error('Invalid line number ' + line);\n                    } else if (string === null) {\n                        lines.splice(line, 1);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        lines[line][0] = string;\n                        if (options) {\n                            lines[line][1] = options;\n                        }\n                        process_line({\n                            string: string,\n                            index: line,\n                            options: options\n                        });\n                        self.flush({\n                            scroll: false,\n                            update: true\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have two options\n            // :: a function that is called with the container div that\n            // :: holds the output (as a jquery object) every time the\n            // :: output is printed (including resize and scrolling)\n            // :: If the line is a function it will be called for every\n            // :: redraw.\n            // :: it use $.when so you can echo a promise\n            // -------------------------------------------------------------\n            echo: function(arg, options) {\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            keepWords: false,\n                            formatters: true\n                        }, options || {});\n                        (function(finalize) {\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize(div);\n                                    }\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (output_buffer.length) {\n                                self.flush();\n                            }\n                            output_buffer = [];\n                        }\n                        if (typeof arg === 'function') {\n                            arg = arg.bind(self);\n                        }\n                        process_line({\n                            string: arg,\n                            options: locals,\n                            index: lines.length\n                        });\n                        // extended commands should be processed only\n                        // once in echo and not on redraw\n                        lines.push([arg, $.extend(locals, {\n                            exec: false\n                        })]);\n                        if (locals.flush) {\n                            self.flush();\n                        }\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                if (arg !== undefined && is_function(arg.then)) {\n                    $.when(arg).done(echo);\n                } else {\n                    echo(arg);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;error]');\n                    return '[[;;;error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    });\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('exception message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    var stack = $.terminal.escape_brackets(e.stack);\n                    self.echo(stack.split(/\\n/g).map(function(trace) {\n                        return '[[;;;error]' + trace.replace(url_re, function(url) {\n                            return ']' + url + '[[;;;error]';\n                        }) + ']';\n                    }).join('\\n'), {\n                        finalize: function(div) {\n                            div.addClass('exception stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (self.prop) { // work with jQuery > 1.6\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                } else {\n                    if (amount > self.attr('scrollTop') && amount > 0) {\n                        self.attr('scrollTop', 0);\n                    }\n                    pos = self.attr('scrollTop');\n                    self.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(success)) {\n                        success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(cancel)) {\n                                cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // push is called in login\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = paused;\n                    function init() {\n                        fire_event('onPush', [top, interpreters.top()]);\n                        prepare_top_interpreter();\n                    }\n                    // self.pause();\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            fire_event('onPop', [top, null]);\n                        }\n                        global_logout();\n                        fire_event('onExit');\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    if (!silent) {\n                        fire_event('onPop', [current, top]);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                    // restore mask\n                    self.set_mask(top.mask);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                command_line.invoke_key(shortcut);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.omap(keymap || {}, function(key, fn) {\n                            if (!new_keymap[key]) {\n                                return fn.bind(self);\n                            }\n                            return function(e, original) {\n                                // new keymap function will get default as 2nd argument\n                                return fn.call(self, e, function() {\n                                    return new_keymap[key](e, original);\n                                });\n                            };\n                        });\n                        command_line.keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!new_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return new_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    self.resizer('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click wheel mousewheel mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill').remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        if (visibility_observer.unobserve) {\n                            visibility_observer.unobserve(self[0]);\n                        } else {\n                            clearInterval(visibility_observer);\n                        }\n                    }\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    output.remove();\n                    wrapper.remove();\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (self.prop) {\n                    scrollHeight = self.prop('scrollHeight');\n                } else {\n                    scrollHeight = self.attr('scrollHeight');\n                }\n                self.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    scroll_height = self[0].scrollHeight;\n                    scroll_top = self.scrollTop();\n                    height = self.outerHeight();\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        }));\n\n        // -----------------------------------------------------------------\n        // INIT CODE\n        // -----------------------------------------------------------------\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        if (settings.height) {\n            self.height(settings.height);\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(self);\n        var font_resizer = $('<div class=\"font\">&nbsp;</div>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(self);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        // before login event\n        if (settings.login && fire_event('onBeforeLogin') === false) {\n            autologin = false;\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (init_interpreter instanceof Array) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n            }\n        }\n        function blur_terminal() {\n            old_enabled = enabled;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            function echo_image(image) {\n                self.echo('<img src=\"' + image + '\"/>', {raw: true});\n            }\n            function data_uri(blob) {\n                var URL = window.URL || window.webkitURL;\n                return URL.createObjectURL(blob);\n            }\n            function echo(object, ignoreEvents) {\n                if (!ignoreEvents && is_function(settings.onPaste)) {\n                    var event = {\n                        target: self\n                    };\n                    if (typeof object === 'string') {\n                        event['text'] = object;\n                    } else if (object instanceof Blob) {\n                        event['image'] = data_uri(object);\n                    }\n                    var ret = fire_event('onPaste', [event]);\n                    if (ret && is_function(ret.then)) {\n                        return ret.then(function(ret) {\n                            echo(ret, true);\n                        });\n                    } else {\n                        echo(event.image || event.text, true);\n                    }\n                } else if (object instanceof Blob) {\n                    echo_image(data_uri(object));\n                } else if (typeof object === 'string') {\n                    if (object.match(/^data:/)) {\n                        echo_image(object);\n                    } else {\n                        self.insert(object);\n                    }\n                }\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                echo(blob);\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(echo);\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        echo(text);\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var new_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(itrp) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                itrp.completion = 'settings';\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: settings.prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: new_keymap\n            }, itrp));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                tabindex: settings.tabindex,\n                prompt: settings.prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                onPaste: settings.onPaste,\n                width: '100%',\n                enabled: false,\n                char_width: char_size.width,\n                keydown: key_down,\n                keymap: new_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                repeatTimeoutKeys: settings.repeatTimeoutKeys,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onPositionChange: function() {\n                    var args = [].slice.call(arguments);\n                    move_cursor_visible();\n                    fire_event('onPositionChange', args);\n                },\n                onCommandChange: function(command) {\n                    // resize is not triggered when insert called just after init\n                    //  and scrollbar appear\n                    if (old_width !== fill.width()) {\n                        // resizer handler will update old_width\n                        self.resizer();\n                    }\n                    fire_event('onCommandChange', [command]);\n                    if (!move_cursor_visible()) {\n                        self.scroll_to_bottom();\n                    }\n                },\n                commands: commands\n            });\n            function disable(e) {\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                self.click(function() {\n                    if (!frozen) {\n                        if (!self.enabled()) {\n                            self.focus();\n                            command_line.enable();\n                        } else {\n                            self.disable();\n                        }\n                    }\n                });\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            textarea.focus();\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    var ignore_elements = '.terminal-output textarea,' +\n                        '.terminal-output input';\n                    // hack for weird jumping on Chrome/windows #402\n                    var scroll_top;\n                    self.find('.cmd textarea').on('focus', function() {\n                        if (typeof scroll_top !== 'undefined') {\n                            self.scrollTop(scroll_top);\n                        }\n                    }).on('blur', function() {\n                        scroll_top = self.scrollTop();\n                    });\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if ($target && $target.closest(ignore_elements).length) {\n                            if (enabled) {\n                                self.disable();\n                            }\n                        } else if (get_selected_text() === '' && $target) {\n                            if (++count === 1) {\n                                if (!frozen) {\n                                    if (!enabled) {\n                                        self.focus();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var clip = self.find('.cmd textarea');\n                    self.on('contextmenu.terminal', function(e) {\n                        if (get_selected_text() === '') {\n                            if (!$(e.target).is('img,value,audio,object,canvas,a')) {\n                                if (!self.enabled()) {\n                                    self.enable();\n                                }\n                                var offset = command_line.offset();\n                                clip.css({\n                                    left: e.pageX - offset.left - 20,\n                                    top: e.pageY - offset.top - 20,\n                                    width: '5em',\n                                    height: '4em'\n                                });\n                                if (!clip.is(':focus')) {\n                                    clip.focus();\n                                }\n                                self.stopTime('textarea');\n                                self.oneTime(100, 'textarea', function() {\n                                    var props = {\n                                        left: '',\n                                        top: '',\n                                        width: '',\n                                        height: ''\n                                    };\n                                    if (!is_css_variables_supported) {\n                                        var in_line = self.find('.cmd .cursor-line')\n                                            .prevUntil('.prompt').length;\n                                        props.top = in_line * 14 + 'px';\n                                    }\n                                    clip.css(props);\n                                });\n                                self.stopTime('selection');\n                                self.everyTime(20, 'selection', function() {\n                                    if (clip[0].selection !== clip[0].value) {\n                                        if (get_textarea_selection(clip[0])) {\n                                            clear_textarea_selection(clip[0]);\n                                            select(\n                                                self.find('.terminal-output')[0],\n                                                self.find('.cmd div:last-of-type')[0]\n                                            );\n                                            self.stopTime('selection');\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                })();\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href);\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (enabled) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('char_width', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    // prevent too many calculations in IE\n                    if (old_height !== height || old_width !== width) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                }\n            }\n            function create_resizers() {\n                self.resizer('unbind').resizer(resize);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                });\n            }\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    if (visibility_observer.unobserve) {\n                        visibility_observer.unobserve(self[0]);\n                    } else {\n                        clearInterval(visibility_observer);\n                    }\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (visible) {\n                    create_resizers();\n                }\n                function visibility_checker() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                    }\n                }\n                if (window.IntersectionObserver) {\n                    visibility_observer = new IntersectionObserver(visibility_checker, {\n                        root: document.body\n                    });\n                    visibility_observer.observe(self[0]);\n                } else {\n                    visibility_observer = setInterval(visibility_checker, 400);\n                }\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            if (window.IntersectionObserver) {\n                                observe_visibility();\n                            }\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (enabled && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (paused) {\n                        var defer = $.Deferred();\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2]).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2]).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            var i = 0;\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (ret === true) {\n                            return;\n                        }\n                        if (have_scrollbar() || ret === false) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    self.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n            })();\n        }); // make_interpreter\n        self.data('terminal', self);\n        return self;\n    }; // terminal plugin\n});\n"]}